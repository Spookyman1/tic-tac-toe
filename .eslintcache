[{"C:\\Users\\henbi\\tic-tac-toe\\src\\index.tsx":"1","C:\\Users\\henbi\\tic-tac-toe\\src\\reportWebVitals.ts":"2","C:\\Users\\henbi\\tic-tac-toe\\src\\App.tsx":"3","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Game.tsx":"4","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\GameStyles.ts":"5","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Reset\\Reset.tsx":"6","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\GameState\\GameState.tsx":"7","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Board.tsx":"8","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\History\\HistoryState\\HistoryState.tsx":"9","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\History\\HistoryLog.tsx":"10","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Reset\\ResetStyles.ts":"11","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\BoardStyles.ts":"12","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Square\\Square.tsx":"13","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Square\\SquareStyles.ts":"14"},{"size":477,"mtime":1609080544177,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":556,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1520,"mtime":1609080670248,"results":"19","hashOfConfig":"16"},{"size":396,"mtime":1609080209751,"results":"20","hashOfConfig":"16"},{"size":428,"mtime":1609080673619,"results":"21","hashOfConfig":"16"},{"size":2421,"mtime":1609141271809,"results":"22","hashOfConfig":"16"},{"size":904,"mtime":1609080632949,"results":"23","hashOfConfig":"16"},{"size":498,"mtime":1609080508342,"results":"24","hashOfConfig":"16"},{"size":744,"mtime":1609140271581,"results":"25","hashOfConfig":"16"},{"size":148,"mtime":1609080671562,"results":"26","hashOfConfig":"16"},{"size":271,"mtime":1609140271584,"results":"27","hashOfConfig":"16"},{"size":857,"mtime":1609080696065,"results":"28","hashOfConfig":"16"},{"size":138,"mtime":1609080355804,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1dqqi1a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\henbi\\tic-tac-toe\\src\\index.tsx",[],["62","63"],"C:\\Users\\henbi\\tic-tac-toe\\src\\reportWebVitals.ts",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\App.tsx",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Game.tsx",["64"],"import * as React from 'react';\r\nimport Board from './Board/Board';\r\nimport { useGameState, } from './GameState/GameState';\r\nimport Reset from './Reset/Reset';\r\nimport { useStyles } from './GameStyles'\r\nimport HistoryLog from './History/HistoryLog';\r\nimport { useHistoryState } from './History/HistoryState/HistoryState';\r\nimport { Value, nowPlaying } from './GameState/GameState';\r\nconst Game = () => {\r\n    const classes = useStyles({});\r\n    const {\r\n        handleClick,\r\n        current,\r\n        gameStatus,\r\n        nextPlayer,\r\n        resetBoard,\r\n        gameState,\r\n    } = useGameState();\r\n    const jumpTo = useHistoryState(gameState);\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.component}>\r\n                <h2>its {nextPlayer} turn!</h2>\r\n            </div>\r\n            <div className={classes.component}>\r\n                <Board board={current} onClick={handleClick} />\r\n            </div>\r\n            <div className={classes.component}>\r\n                {gameStatus === Value.TIE ? <h3>its a tie!</h3> :\r\n                    gameStatus !== Value.EMPTY &&\r\n                    <h3> the winner is {gameStatus}! </h3>}\r\n\r\n            </div>\r\n            <div className={classes.component}>\r\n                <Reset onClick={resetBoard} />\r\n            </div>\r\n            <div className={classes.component}>\r\n                <HistoryLog jumpTo={jumpTo} history={gameState.history} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Game;","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\GameStyles.ts",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Reset\\Reset.tsx",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\GameState\\GameState.tsx",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Board.tsx",["65"],"import * as React from 'react';\r\n\r\nimport Square from './Square/Square';\r\nimport { useStyles } from './BoardStyles';\r\nimport { BoardState } from '../GameState/GameState';\r\nimport { SquareProps } from './Square/Square';\r\n\r\ntype BoardProps = {\r\n  board: BoardState;\r\n  onClick: (square: number) => void;\r\n};\r\n\r\nconst Board = ({ board, onClick }: BoardProps) => {\r\n  const classes = useStyles({});\r\n  const row = [0, 1, 2];\r\n  const column = [0, 1, 2];\r\n  return (\r\n    <div className={classes.board}>\r\n      {row.map(row_index =>\r\n        <div className={classes.row}>\r\n          {column.map(column_index =>\r\n            <Square\r\n              position={row_index * row.length + column_index}\r\n              value={board[row_index * row.length + column_index]}\r\n              onClick={() => onClick(row_index * row.length + column_index)} />)}\r\n\r\n        </div>)}\r\n    </div>\r\n  )\r\n}\r\nexport default Board;","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\History\\HistoryState\\HistoryState.tsx",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\History\\HistoryLog.tsx",["66"],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Reset\\ResetStyles.ts",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\BoardStyles.ts",[],"C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Square\\Square.tsx",["67","68"],"import { makeStyles } from '@material-ui/core';\r\nimport { Value } from '../../GameState/GameState';\r\nimport { useStyles } from './SquareStyles';\r\nexport type SquareProps = {\r\n    value: Value;\r\n    onClick: () => void;\r\n    position: Number;\r\n};\r\n// remember to set as getState()\r\nconst X = process.env.PUBLIC_URL + '/Assets/X.jpg';\r\nconst O = process.env.PUBLIC_URL + '/Assets/O.jpg';\r\nconst empty = process.env.PUBLIC_URL + '/Assets/empty.jpg';\r\nconst Square = (props: SquareProps) => {\r\n    const classes = useStyles({});\r\n    const getState = () => {\r\n        if (props.value === Value.X) { return X; }\r\n        if (props.value === Value.O) { return O; }\r\n        if (props.value === Value.EMPTY) { return empty; }\r\n    }\r\n    return (\r\n        <img src={getState()} onClick={props.onClick} className={classes.image} />\r\n    )\r\n}\r\nexport default Square;","C:\\Users\\henbi\\tic-tac-toe\\src\\components\\Game\\Board\\Square\\SquareStyles.ts",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":17,"nodeType":"75","messageId":"76","endLine":8,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":21},{"ruleId":"73","severity":1,"message":"78","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":21,"column":9,"nodeType":"82","endLine":21,"endColumn":83},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'nowPlaying' is defined but never used.","Identifier","unusedVar","'SquareProps' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]